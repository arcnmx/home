#!/usr/bin/env bash
set -eu

nix() {
	command nix run -f channels/nixpkgs nix -c nix "$@"
}

usage() {
	echo usage: $0 CMD FILE [ATTR] [ArgName=value]...
	echo example: $0 run run.nix nixpkgs.hello Some=arg
}

collect_values() {
	SHIFT=0
	for arg in "$@"; do
		if [[ $arg == -- ]]; then
			SHIFT=$((SHIFT+1))
			break
		elif [[ $arg == -* ]]; then
			break
		elif [[ $arg != *=* ]]; then
			break
		fi
		SHIFT=$((SHIFT+1))
		shift
		ARGS+=(--argstr "${arg%=*}" "${arg#*=}")
	done
}

collect_args() {
	collect_values "$@"
	shift $SHIFT

	ARGS+=("$@")
}

parse_args() {
	if [[ $# -lt 1 ]]; then
		usage
	fi

	FILE=$1
	SHIFT=1

	ATTR=
	if [[ -e $FILE ]]; then
		ARGS=(-f "$FILE")

		if [[ $# -gt 1 ]]; then
			ATTR=$2
			SHIFT=2

			if [[ $ATTR = . ]]; then
				ATTR=
			fi
		fi
	else
		ATTR="$FILE"
		FILE=
	fi

	if [[ $CMD = run && -z $FILE && $ATTR != *.* ]]; then
		ATTR="nixpkgs.$ATTR"
	fi

	if [[ -n $ATTR ]]; then
		ARGS+=("$ATTR")
	fi
}

cmd_other() {
	parse_args "$@"
	shift $SHIFT

	collect_args "$@"

	nix $CMD "${ARGS[@]}"
}

cmd_run() {
	parse_args "$@"
	shift $SHIFT

	collect_values "$@"
	shift $SHIFT

	ARGS+=(-c "${ATTR##*.}" "$@")

	nix run "${ARGS[@]}"
}

cmd_shell() {
	parse_args "$@"
	shift $SHIFT

	collect_args "$@"

	nix run "${ARGS[@]}"
}

cmd_exec() {
	parse_args "$@"
	shift $SHIFT

	collect_args "$@"

	SCRIPT=$(nix eval --raw "${ARGS[@]}")
	eval "$SCRIPT"
}

parse_switch_args() {
	SHIFT=0
	if [[ $# -gt 0 && ${1-} != switch && ${1-} != build ]]; then
		ATTR=$1
		shift
		SHIFT=1
	else
		ATTR=$(hostname -s)
	fi

	if [[ ${1-} = switch || ${1-} = build ]]; then
		CMD=$1
		shift
		SHIFT=$((SHIFT+1))
	else
		CMD=switch
	fi
}

cmd_switch() {
	parse_switch_args "$@"
	shift $SHIFT

	$0 exec switch.nix $CMD hostName=$ATTR "$@"
}

cmd_home() {
	parse_switch_args "$@"
	shift $SHIFT

	$0 run run.nix home-manager -f home.nix -A "$ATTR" "$@" $CMD
}

main() {
	CMD=$1
	shift

	if [[ $(type -t "cmd_$CMD") = function ]]; then
		"cmd_$CMD" "$@"
	else
		cmd_other "$CMD" "$@"
	fi
}

main "$@"
